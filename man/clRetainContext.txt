// Copyright (c) 2014-2019 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clRetainContext(3)

== Name
clRetainContext - Retain an OpenCL context

== C Specification

To retain a context, call the function:

include::{api}/protos/clRetainContext.txt[]


== Parameters

_context_ specifies the OpenCL context to retain.


== Description

// refBody

*clRetainContext* increments the _context_ reference count.

*clCreateContext* and *clCreateContextFromType* perform an implicit retain.
This is very helpful for 3^rd^ party libraries, which typically get a
context passed to them by the application.
However, it is possible that the application may delete the context without
informing the library.
Allowing functions to attach to (i.e. retain) and release a context solves
the problem of a context being used by a library no longer being valid.

*clRetainContext* returns CL_SUCCESS if the function is executed
successfully.
Otherwise, it returns one of the following errors:

  * CL_INVALID_CONTEXT if _context_ is not a valid OpenCL context.
  * CL_OUT_OF_RESOURCES if there is a failure to allocate resources required
    by the OpenCL implementation on the device.
  * CL_OUT_OF_HOST_MEMORY if there is a failure to allocate resources
    required by the OpenCL implementation on the host.


== See Also

flink:clCreateContext, flink:clReleaseContext


== Document Notes

For more information, see the OpenCL Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_API.html#clRetainContext

This page is extracted from the OpenCL Specification. 
Fixes and changes should be made to the Specification, not directly.

include::footer.txt[]

