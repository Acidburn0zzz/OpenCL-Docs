// Copyright (c) 2014-2019 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clGetDeviceAndHostTimer(3)

== Name
clGetDeviceAndHostTimer - Query synchronized host and device timestamps

== C Specification

To query device and host timestamps, call the function:

include::{api}/protos/clGetDeviceAndHostTimer.txt[]


== Parameters

_device_ is a device returned by *clGetDeviceIDs*.

_device_timestamp_ will be updated with the value of the device timer in
nanoseconds.
The resolution of the timer is the same as the device profiling timer
returned by *clGetDeviceInfo* and the CL_DEVICE_PROFILING_TIMER_RESOLUTION
query.

_host_timestamp_ will be updated with the value of the host timer in
nanoseconds at the closest possible point in time to that at which
_device_timer_ was returned.
The resolution of the timer may be queried via *clGetPlatformInfo* and the
flag CL_PLATFORM_HOST_TIMER_RESOLUTION.


== Description

// refBody

*clGetDeviceAndHostTimer* returns a reasonably synchronized pair of
timestamps from the device timer and the host timer as seen by _device_.
Implementations may need to execute this query with a high latency in order
to provide reasonable synchronization of the timestamps.
The host timestamp and device timestamp returned by this function and
*clGetHostTimer* each have an implementation defined timebase.
The timestamps will always be in their respective timebases regardless of
which query function is used.
The timestamp returned from *clGetEventProfilingInfo* for an event on a
device and a device timestamp queried from the same device will always be in
the same timebase.

*clGetDeviceAndHostTimer* will return CL_SUCCESS with a time value in
_host_timestamp_ if provided.
Otherwise, it returns one of the following errors:

  * CL_INVALID_DEVICE if _device_ is not a valid OpenCL device.
  * CL_INVALID_VALUE if _host_timestamp_ or _device_timestamp_ is `NULL`.
  * CL_OUT_OF_RESOURCES if there is a failure to allocate resources required
    by the OpenCL implementation on the device.
  * CL_OUT_OF_HOST_MEMORY if there is a failure to allocate resources
    required by the OpenCL implementation on the host.


== See Also

No cross-references are available


== Document Notes

For more information, see the OpenCL Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_API.html#clGetDeviceAndHostTimer

This page is extracted from the OpenCL Specification. 
Fixes and changes should be made to the Specification, not directly.

include::footer.txt[]

