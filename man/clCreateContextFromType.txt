// Copyright (c) 2014-2019 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clCreateContextFromType(3)

== Name
clCreateContextFromType - Create an OpenCL context from a device type

== C Specification

To create an OpenCL context from a specific device type^11^, call the
function:

include::{api}/protos/clCreateContextFromType.txt[]


== Parameters

_properties_ specifies a list of context property names and their
corresponding values.
Each property name is immediately followed by the corresponding desired
value.
The list of supported properties is described in the
link:{html_spec_relative}#context-properties-table[Context Properties] table.
_properties_ can also be `NULL` in which case the platform that is selected
is implementation-defined.

_device_type_ is a bit-field that identifies the type of device and is
described in the link:{html_spec_relative}#device-categories-table[Device Categories] table.

_pfn_notify_ and _user_data_ are described in *clCreateContext*.

_errcode_ret_ will return an appropriate error code.
If _errcode_ret_ is `NULL`, no error code is returned.


== Description

// refBody

Only devices that are returned by *clGetDeviceIDs* for _device_type_ are
used to create the context.
The context does not reference any sub-devices that may have been created
from these devices.

*clCreateContextFromType* returns a valid non-zero context and _errcode_ret_
is set to CL_SUCCESS if the context is created successfully.
Otherwise, it returns a `NULL` value with the following error values
returned in _errcode_ret_:

  * CL_INVALID_PLATFORM if _properties_ is `NULL` and no platform could be
    selected or if platform value specified in _properties_ is not a valid
    platform.
  * CL_INVALID_PROPERTY if context property name in _properties_ is not a
    supported property name, if the value specified for a supported property
    name is not valid, or if the same property name is specified more than
    once.
  * CL_INVALID_VALUE if _pfn_notify_ is `NULL` but _user_data_ is not
    `NULL`.
  * CL_INVALID_DEVICE_TYPE if _device_type_ is not a valid value.
  * CL_DEVICE_NOT_AVAILABLE if no devices that match _device_type_ and
    property values specified in _properties_ are currently available.
  * CL_DEVICE_NOT_FOUND if no devices that match _device_type_ and property
    values specified in _properties_ were found.
  * CL_OUT_OF_RESOURCES if there is a failure to allocate resources required
    by the OpenCL implementation on the device.
  * CL_OUT_OF_HOST_MEMORY if there is a failure to allocate resources
    required by the OpenCL implementation on the host.

11::
    *clCreateContextfromType* may return all or a subset of the actual
    physical devices present in the platform and that match device_type.


== See Also

No cross-references are available


== Document Notes

For more information, see the OpenCL Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_API.html#clCreateContextFromType

This page is extracted from the OpenCL Specification. 
Fixes and changes should be made to the Specification, not directly.

include::footer.txt[]

