// Copyright 2017 The Khronos Group. 
//
//  Khronos licenses this file to you under the Creative Commons Attribution 4.0 
//  International (CC BY 4.0) License (the "License"); you may not use this file 
//  except in compliance with the License.  You may obtain a copy of the License 
//  at https://creativecommons.org/licenses/by/4.0/
//
//  Unless required by applicable law or agreed to in writing, material distributed 
//  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
//  CONDITIONS OF ANY KIND, either express or implied. If all or a portion of this 
//  material is re-used, notice substantially similar to the following must be included:
//
//  This specification includes material developed at The Khronos Group 
//  (http://www.khronos.org/). Khronos supplied such material on an "AS IS" BASIS, 
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, under 
//  the terms of the Creative Commons Attribution 4.0 International (CC BY 4.0) 
//  License (the "License"), available at https://creativecommons.org/licenses/by/4.0/. 
//  All use of such material is governed by the term of the License. Khronos bears 
//  no responsibility whatsoever for additions or modifications to its material.

== Associated OpenCL specification

=== SPIR-V Intermediate language

The OpenCL 2.2 specification requires support for the SPIR-V
intermediate language that allows offline, or linked online, compilation
to a binary format that may be consumed by the *clCreateProgramWithIL*
interface.

The OpenCL specification includes a specification for the SPIR-V 1.2
intermediate language as a cross-platform input language. In addition,
platform vendors may support their own IL if this is appropriate. The
OpenCL runtime will return a list of supported IL versions using the
*CL_DEVICE_IL_VERSION* parameter to the *clGetDeviceInfo*query.

=== Extensions to OpenCL

In addition to the specification of core features, OpenCL provides a
number of extensions to the API, kernel language or intermediate
representation. These features are defined in the OpenCL 2.2 extensions
specification document.


Extensions defined against earlier versions of the OpenCL
specifications, whether the API or language specification, are defined
in the matching versions of the extension specification document.

=== Support for earlier OpenCL C kernel languages

The OpenCL C kernel language is not defined in the OpenCL 2.2
specification. New language features are described in the OpenCL C++
specification as well as the SPIR-V 1.2 specification and in kernel
languages that target it. A kernel language defined by any of the OpenCL
1.0, OpenCL 1.1, OpenCL 1.2 and OpenCL 2.0 kernel language
specifications as well as kernels language extensions defined by the
matching versions of OpenCL extension specifications are valid to pass
to *clCreateProgramWithSource* executing against an OpenCL 2.2 runtime.

